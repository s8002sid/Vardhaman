using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Windows.Forms;
using System.Data.SqlClient;
namespace Vardhman
{
    public partial class Billing_dataentry : Form
    {
        AutoCompleteStringCollection src = new AutoCompleteStringCollection();
        Connection con = new Connection();
        public Billing_dataentry()
        {
            InitializeComponent();
        }

        private void Billing_Load(object sender, EventArgs e)
        {
            con.connent();
            DataGridViewCellStyle cs = new DataGridViewCellStyle();
            clear();
            //comboBox1.DataSource = con.getTable("select name from customer");
            //comboBox1.DisplayMember = "name";
            //comboBox1.Text = "";
            //comboBox3.DataSource = con.getTable("select distinct(city) as city from customer");
            //comboBox3.DisplayMember = "city";
            //comboBox3.Text = "";
            //textBox6.Text = "2";
            //textBox2.Text = con.exesclr("exec maxbillno");
            cs.BackColor = Color.FromArgb(162,164, 244);
            dataGridView1.AlternatingRowsDefaultCellStyle = cs;
            dataGridView2.AlternatingRowsDefaultCellStyle = cs;
            //MessageBox.Show(Vardhman.App_Code.number.num2text(12345));
        }
        private void dataGridView1_EditingControlShowing(object sender, DataGridViewEditingControlShowingEventArgs e)
        {
            string x = dataGridView1.Columns[dataGridView1.CurrentCell.ColumnIndex].HeaderText;
            if (x == "Company" || x == "Group" ||x == "Item")
            {
                TextBox t = (TextBox)e.Control;
                t.AutoCompleteCustomSource = getAutocompletedata(dataGridView1.CurrentCell.ColumnIndex, dataGridView1.CurrentRow.Index);
                t.AutoCompleteMode = AutoCompleteMode.SuggestAppend;
                t.AutoCompleteSource = AutoCompleteSource.CustomSource;
            }
        }
        private void c_CheckedChanged(object sender, EventArgs e)
        {
            total();
        }
        private AutoCompleteStringCollection getAutocompletedata(int column, int row)
        {
            string col0, col1, col2, type = "";
            try { col0 = dataGridView1.Rows[row].Cells["Company"].Value.ToString(); }
            catch { col0 = ""; }

            try { col1 = dataGridView1.Rows[row].Cells["Group"].Value.ToString(); }
            catch { col1 = ""; }

            try { col2 = dataGridView1.Rows[row].Cells["Item"].Value.ToString(); }
            catch { col2 = ""; }
            
            type = dataGridView1.Columns[column].HeaderText.ToUpper();
            src.Clear();
            if (type != "COMPANY" && type != "GROUP" && type != "ITEM")
                return src;
            string param = "";
            param += "'" + type + "',";
            param += "'" + col0 + "',";
            param += "'" + col1 + "',";
            param += "'" + col2 + "'";
            SqlDataReader dr = con.exereader("exec get_autocomplete " + param);
            while (dr.Read())
            {
                src.Add(dr[0].ToString());
            }
            con.closereader();
            dr.Close();
            return src;
        }
        private void Billing_Leave(object sender, EventArgs e)
        {
            con.disconnect();
        }
        private void amtCalculation(int row)
        {
            if (row == -1)
                return;
            double qty, meter, rate, quantity, amount;
            try { qty = Convert.ToDouble(dataGridView1.Rows[row].Cells["Quantity"].Value.ToString()); }
            catch { qty = 0; dataGridView1.Rows[row].Cells["Quantity"].Value = ""; }
            meterCal(row);
            try { meter = Convert.ToDouble(dataGridView1.Rows[row].Cells["Meter"].Value.ToString()); }
            catch { meter = 0; dataGridView1.Rows[row].Cells["Meter"].Value = ""; }

            try { rate = Convert.ToDouble(dataGridView1.Rows[row].Cells["Rate"].Value.ToString()); }
            catch { rate = 0; dataGridView1.Rows[row].Cells["Rate"].Value = ""; }
            if (meter != 0)
                quantity = meter;
            else
                quantity = qty;
            amount = quantity * rate;
            dataGridView1.Rows[row].Cells["Amount"].Value = roundOff.round(amount);
            total();
        }

        private void dataGridView1_CellEndEdit(object sender, DataGridViewCellEventArgs e)
        {
            string x = dataGridView1.Columns[e.ColumnIndex].HeaderText;
            if (x == "Quantity" || x == "Rate" || x == "Meter")
                amtCalculation(e.RowIndex);
            string cellValue;
            try
            {
                cellValue = dataGridView1.Rows[e.RowIndex].Cells[e.ColumnIndex].Value.ToString();
            }
            catch
            {
                cellValue = "";
            }
            if (x == "Item Details" && cellValue.Trim() != "")
            {
                meterCal(e.RowIndex);
            }
            if (x == "Item")
            {
                string company, group, item;
                try
                {
                    company = dataGridView1.Rows[e.RowIndex].Cells["Company"].Value.ToString();
                }
                catch
                {
                    company = "";
                }
                try
                {
                    group = dataGridView1.Rows[e.RowIndex].Cells["Group"].Value.ToString();
                }
                catch
                {group = "Group";
                }
                try
                {
                    item = dataGridView1.Rows[e.RowIndex].Cells["Item"].Value.ToString();
                }
                catch
                {
                    item= "";
                }
                string rate = con.exesclr(string.Format("select price from item_detail where Company = '{0}' and ([Type Name] = '{1}' or shortcut = '{1}') and [Item Name] = '{2}'", company, group, item));
                string []itemforrate = dataGridView1.Rows[e.RowIndex].Cells[e.ColumnIndex].Value.ToString().Split(Convert.ToChar(" "));
                double tagrate = RateCalculation.rateCalc(itemforrate);
                if (tagrate != 0) 
                dataGridView1.Rows[e.RowIndex].Cells["Rate"].Value =roundOff.withpoint(tagrate.ToString());
                else
                dataGridView1.Rows[e.RowIndex].Cells["Rate"].Value =roundOff.withpoint(rate);
            }
        }
        private void meterCal(int r)
        {
            Calcmeterdetail detail = new Calcmeterdetail();
            string meter , group , company , item;
            if (dataGridView1.Rows[r].Cells["Note"].Value != null)
                meter = dataGridView1.Rows[r].Cells["Note"].Value.ToString();
            else
                return;
            if (dataGridView1.Rows[r].Cells["Company"].Value != null)
                company = dataGridView1.Rows[r].Cells["Company"].Value.ToString();
            else company = "";
            if (dataGridView1.Rows[r].Cells["Group"].Value != null)
                group = dataGridView1.Rows[r].Cells["Group"].Value.ToString();
            else
                group = "";
            if (dataGridView1.Rows[r].Cells["Item"].Value != null)
                item = dataGridView1.Rows[r].Cells["Item"].Value.ToString();
            else
                item = "";
            detail.calc(meter,company ,group ,item );
            dataGridView1.Rows[r].Cells["Quantity"].Value = detail.qty;
            dataGridView1.Rows[r].Cells["Meter"].Value = detail.meter;
        }
        private void comboBox2_Enter(object sender, EventArgs e)
        {
            string x = comboBox2.Text;
            DataSet ds = con.dsentry("select name from transport", "transport");
            comboBox2.DataSource = ds.Tables[0];
            comboBox2.DisplayMember = "name";
            comboBox2.Text = x;
        }

        private void comboBox1_KeyPress(object sender, KeyPressEventArgs e)
        {
            e.KeyChar = Convert.ToChar(e.KeyChar.ToString().ToUpper());
        }

        private void textBox6_KeyPress(object sender, KeyPressEventArgs e)
        {
            if (!(e.KeyChar == 8 || e.KeyChar == 9 || e.KeyChar == 10 || e.KeyChar == 11 || e.KeyChar == 12 || e.KeyChar == 46 || (e.KeyChar >= 48 && e.KeyChar <= 57)))
                e.Handled = true;
        }

        private void textBox2_KeyPress(object sender, KeyPressEventArgs e)
        {
            if (!(e.KeyChar == 8 || e.KeyChar == 9 || e.KeyChar == 10 || e.KeyChar == 11 || e.KeyChar == 12 || (e.KeyChar >= 48 && e.KeyChar <= 57)))
                e.Handled = true;
        }

        private void dataGridView1_CellValueChanged(object sender, DataGridViewCellEventArgs e)
        {
                string x = dataGridView1.Columns[e.ColumnIndex].HeaderText;
                if (x == "Quantity" || x == "Meter" || x == "Rate")
                    amtCalculation(e.RowIndex);
            if(e.ColumnIndex >=0 && e.RowIndex >=0)
            dataGridView1.Rows[e.RowIndex].Cells[e.ColumnIndex].Value = dataGridView1.Rows[e.RowIndex].Cells[e.ColumnIndex].Value.ToString().ToUpper();
        if (x == "Amount")
            total();
        }

        private void button4_Click(object sender, EventArgs e)
        {
            if (MessageBox.Show("are you sure you want to clear all item in this window? this will delete all item in this window and changes will remain unchanged" , "Warning" , MessageBoxButtons.OKCancel , MessageBoxIcon.Warning ) == DialogResult.OK)
                clear();
        }

        private void dataGridView1_CellClick(object sender, DataGridViewCellEventArgs e)
        {
            if (dataGridView1.Columns[e.ColumnIndex].HeaderText == "X")
            {
                string y = "";
                if (dataGridView1.CurrentRow.Cells["Company"].Value != null)
                    y += dataGridView1.CurrentRow.Cells["Company"].Value.ToString() + " ";
                if (dataGridView1.CurrentRow.Cells["Group"].Value != null)
                    y += dataGridView1.CurrentRow.Cells["Group"].Value.ToString() + " ";
                if (dataGridView1.CurrentRow.Cells["Item"].Value != null)
                    y += dataGridView1.CurrentRow.Cells["Item"].Value.ToString() + " ";
                try
                {
                    if(MessageBox.Show("Are you sure that you want to delete item " + y,"Warning" , MessageBoxButtons.OKCancel , MessageBoxIcon.Warning) == DialogResult.OK)
                    dataGridView1.Rows.Remove(dataGridView1.CurrentRow);
                    
                }
                catch { }
            }
        }
        private void total()
        {
            double total = 0,expper,exp,trans,grandtotal , rg;
            if (textBox9.Text == "")
                rg = 0;
            else rg = Convert.ToDouble(textBox9.Text);
            for(int i = 0;i<dataGridView1.Rows.Count;i++)
            {
                if (dataGridView1.Rows[i].Cells[8].Value != null)
                {
                    total += Convert.ToDouble(dataGridView1.Rows[i].Cells[8].Value.ToString());
                }
            }
            total = total - rg;
            if (textBox6.Text != "")
                expper = Convert.ToDouble(textBox6.Text);
            else
                expper = 0;
            exp =Convert.ToDouble(roundOff.round(total * expper / 100));
            if (textBox1.Text == "")
                trans = 0;
            else
                trans = Convert.ToDouble(textBox1.Text);
            if (checkBox1.Checked == true)
            {
                grandtotal =Convert.ToDouble(roundOff.round(Convert.ToString(total - exp + trans)));
            }
            else
                grandtotal =Convert.ToDouble(roundOff.round(Convert.ToString(total + exp + trans)));
            textBox3.Text = roundOff.round(total);
            if (checkBox1.Checked == false)
                textBox4.Text = roundOff.withpoint(Convert.ToString(Math.Abs(grandtotal - total - trans)));
            else
                textBox4.Text = roundOff.withpoint(Convert.ToString(Math.Abs((grandtotal-total-trans))));
            textBox1.Text = roundOff.withpoint(trans.ToString());
            textBox5.Text =roundOff.withpoint(grandtotal.ToString());
        }

        private void dataGridView1_RowsRemoved(object sender, DataGridViewRowsRemovedEventArgs e)
        {
            total();
        }

        private void checkBox1_CheckedChanged(object sender, EventArgs e)
        {
            total();
            if (checkBox1.Checked == true)
            {
                label9.Text = "CD%";
                label7.Text = "CD";
            }
            else
            {
                label7.Text = "EXP";
                label9.Text = "EXP%";
            }
        }

        private void comboBox1_SelectedIndexChanged(object sender, EventArgs e)
        {
            //string name = "";
            //if (comboBox1.Text == "System.Data.DataRowView")
            //    return;
            //DataTable dt = con.getTable(string.Format("exec get_duplicate '{0}'", comboBox1.Text));
            //for (int i = 0; i < dt.Rows.Count; i++)
            //{
            //    DataRow dr = dt.Rows[0];
            //    if (dr[0].ToString() == "0")
            //        return;
            //    name += "Name: " + dr[0].ToString() + " City:" + dr[1].ToString() + Environment.NewLine;
            //}
            //MessageBox.Show("There are duplicate customers with same name " + Environment.NewLine + name, "Warning", MessageBoxButtons.OK, MessageBoxIcon.Warning);
        }

        private void textBox2_Leave(object sender, EventArgs e)
        {
            string x = con.exesclr("exec check_billno " + textBox2.Text);
            if (x == "0")
                return;
            else
            {
                MessageBox.Show("Billnumber already in use");
                textBox2.Text = x;
            }
        }

        private void comboBox2_SelectedIndexChanged(object sender, EventArgs e)
        {
            string x = con.exesclr(string.Format("exec get_transportcharge'{0}' , '{1}'", comboBox3.Text, comboBox2.Text));
            if (x != "0")
                textBox1.Text = x;
        }

        private void textBox1_TextChanged(object sender, EventArgs e)
        {
            total();
        }
        private void save()
        {
            total();
            insupd ins = new insupd();
            ins.ShowDialog();
            Boolean update = ins.update;
            Boolean ok = ins.ok;
            if (ok == false)
                return;
            string type;
            if(checkBox1.Checked == false)
                type = "NET AMOUNT TO PAY";
            else
                type = "PAID BY CASH";
            int x = Convert.ToInt32(con.exesclr("exec maxbillno"));
            int y =Convert.ToInt32(textBox2.Text);
            if (y < x)
            {
                MessageBox.Show("billnumber is not valid valid billlnumber starts from " + x.ToString());
                return;
            }
            for (int i = x; i < y; i++)
            {
                con.exesclr(string.Format("insert into bill_master(billno) values({0})", i.ToString()));
            }
            con.exeNonQurey(string.Format("exec add_bill_master'{0}' , '{1}' , '{2}' ,  {3} , {4} , {5} , {6} , '{7}' , {8} , '{9}' , {10} , '{11}' , '{12}'" , comboBox1.Text.Trim() , comboBox3.Text.Trim() , dateTimePicker1.Value.ToString().Trim() , textBox2.Text.Trim(),textBox3.Text.Trim() , textBox6.Text.Trim() , textBox4.Text.Trim(),comboBox2.Text.Trim() , textBox1.Text.Trim() , textBox8.Text.Trim() , textBox5.Text.Trim() , textBox7.Text.Trim() , type));
            for (int i = 0; i < dataGridView1.Rows.Count - 1; i++)
            {
                string company , group , item , meterdetail , qty , meter , rate , amount , metercount , upd;
                try{company = dataGridView1.Rows[i].Cells["Company"].Value.ToString().Trim();}catch{company = "";}
                try{group = dataGridView1.Rows[i].Cells["Group"].Value.ToString().Trim();}catch{group = "";}
                try{item = dataGridView1.Rows[i].Cells["Item"].Value.ToString().Trim();}catch{item = "";}
                try{meterdetail = dataGridView1.Rows[i].Cells["Note"].Value.ToString().Trim();}catch{meterdetail = "";}
                try{qty = dataGridView1.Rows[i].Cells["Quantity"].Value.ToString().Trim();}catch{qty = "";}
                try{meter = dataGridView1.Rows[i].Cells["Meter"].Value.ToString().Trim();}catch{meter = "";}
                try{rate = dataGridView1.Rows[i].Cells["Rate"].Value.ToString().Trim();}catch{rate = "";}
                try{amount = dataGridView1.Rows[i].Cells["Amount"].Value.ToString().Trim();}catch{amount = "";}
                try { if (dataGridView1.Rows[i].Cells["meter"].Value != null)metercount = "NO"; else metercount = "YES"; }
                catch { metercount = "yes"; }
                upd = update.ToString(); 
                con.exeNonQurey(string.Format("exec add_item {0} , '{1}' , '{2}' , '{3}' , '{4}' , {5} , '{6}' , {7} , {8} , '{9}' , '{10}' , {11}",textBox2.Text.Trim() , company, group, item, meterdetail, qty, meter, rate, amount, metercount, upd , "0")); 
            }
            for (int i = 0; i < dataGridView2.Rows.Count - 1; i++)
            {
                string item,qty, rate, amount;
                try { item = dataGridView2.Rows[i].Cells[0].Value.ToString().Trim(); }
                catch { item = ""; }
                try { qty = dataGridView2.Rows[i].Cells[1].Value.ToString().Trim(); }
                catch { qty = ""; }
                try { rate = dataGridView2.Rows[i].Cells[2].Value.ToString().Trim(); }
                catch { rate = ""; }
                try { amount = dataGridView2.Rows[i].Cells[3].Value.ToString().Trim(); }
                catch { amount = ""; }
                con.exeNonQurey(string.Format("exec add_item {0} , '{1}' , '{2}' , '{3}' , '{4}' , {5} , '{6}' , {7} , {8} , '{9}' , '{10}' , {11}",textBox2.Text.Trim() , "", "", item, "", qty, "", rate, amount, "", "false", "1")); 
            }
        }
        private void clear()
        {
            comboBox1.DataSource = con.getTable("select name from customer where (name !='' or name is not null) and type = 'CUSTOMER'");
            comboBox1.DisplayMember = "name";
            comboBox1.Text = "";
            comboBox3.DataSource = con.getTable("select distinct(city) as city from customer where city !='' or city is not null");
            comboBox3.DisplayMember = "city";
            comboBox3.Text = "";
            textBox2.Text = con.exesclr("exec maxbillno");
            dataGridView1.Rows.Clear();
            dataGridView2.Rows.Clear();
            checkBox1.Checked = false;
            textBox9.Text = "0.00";
            textBox6.Text = "2.00";
            comboBox2.DataSource = con.getTable("select name from transport");
            comboBox2.DisplayMember = "name";
            comboBox2.Text = "";
            textBox8.Text = "";
            textBox3.Text = "0.00";
            textBox4.Text = "0.00";
            textBox1.Text = "0.00";
            textBox5.Text = "0.00";
            comboBox1.Select();
            comboBox1.Focus();

        }

        private void button1_Click(object sender, EventArgs e)
        {
            save();
            MessageBox.Show("Bill Saved Successfully", "Saved Message", MessageBoxButtons.OK, MessageBoxIcon.Information);
            clear();
        }

        private void dataGridView2_CellEndEdit(object sender, DataGridViewCellEventArgs e)
        {
            rgcal();
        }
        private void rgcal()
        {
            double qty, rate, amount, totalamt = 0;
            for (int i = 0; i < dataGridView2.Rows.Count - 1; i++)
            {
                try { qty = Convert.ToDouble(dataGridView2.Rows[i].Cells[1].Value.ToString()); }
                catch { return; }
                try { rate = Convert.ToDouble(dataGridView2.Rows[i].Cells[2].Value.ToString()); }
                catch { return; }
                amount = qty * rate;
                totalamt += amount;
                dataGridView2.Rows[i].Cells[3].Value = roundOff.withpoint(amount.ToString());
            }
            textBox9.Text = roundOff.withpoint(totalamt.ToString());
        }
        private void button7_Click(object sender, EventArgs e)
        {
            splitContainer3.Visible = false;
        }

        private void button3_Click(object sender, EventArgs e)
        {
            splitContainer3.Visible = true;
        }

        private void dataGridView2_RowsRemoved(object sender, DataGridViewRowsRemovedEventArgs e)
        {
            rgcal();
        }

        private void textBox9_TextChanged(object sender, EventArgs e)
        {
            total();
        }

        private void comboBox1_Leave(object sender, EventArgs e)
        {
            string name = "";
            if (comboBox1.Text == "System.Data.DataRowView")
                return;
            DataTable dt = con.getTable(string.Format("exec get_duplicate '{0}'", comboBox1.Text));
            for (int i = 0; i < dt.Rows.Count; i++)
            {
                DataRow dr = dt.Rows[i];
                if (dr[0].ToString() == "0")
                    return;
                name += "Name: " + dr[0].ToString() + " City:" + dr[1].ToString() + Environment.NewLine;
            }
            MessageBox.Show("There are duplicate customers with same name " + Environment.NewLine + name, "Warning", MessageBoxButtons.OK, MessageBoxIcon.Warning);
        }

        private void button2_Click(object sender, EventArgs e)
        {
            save();
            MessageBox.Show("Bill Saved Successfully", "Saved Message", MessageBoxButtons.OK, MessageBoxIcon.Information);
            con.exeNonQurey(string.Format("exec temp_bill_allocate {0}", textBox2.Text));
            clear();
            Report_Viewercs RP = new Report_Viewercs();
            RP.loadrpt("worg");
            RP.Show();
        }

        private void comboBox1_Enter(object sender, EventArgs e)
        {
            string x = comboBox1.Text;
            comboBox1.DataSource = con.getTable("select name from customer where (name !='' or name is not null) and type = 'CUSTOMER'");
            comboBox1.DisplayMember = "name";
            comboBox1.Text = x;
        }
    }
}