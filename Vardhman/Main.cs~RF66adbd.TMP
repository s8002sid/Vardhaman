using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Windows.Forms;
using System.IO;

namespace Vardhman
{
    public partial class Main : Form
    {
        Billing_dataentry bill;
        Recepit recepit;
        Account_Head account;
        emptybill empty = new emptybill();
        Check_Bounse chkbounce = new Check_Bounse();
        toteler t;
        Item_Entry item;
        public Main()
        {
            InitializeComponent();
        }

        private void backupToolStripMenuItem1_Click(object sender, EventArgs e)
        {
            openFileDialog1.ShowDialog();
        }

        private void Main_SizeChanged(object sender, EventArgs e)
        {
            pictureBox1.Location = new Point(this.Width / 2 - pictureBox1.Width / 2, this.Height / 2 - pictureBox1.Height / 2);
            button4.Location = new Point(this.Width-button4.Width*2, this.Height-button4.Height*3);
        }

        private void Main_Load(object sender, EventArgs e)
        {
            pictureBox1.Location = new Point(this.Width / 2 - pictureBox1.Width / 2, this.Height / 2 - pictureBox1.Height / 2);
            button4.Anchor = (AnchorStyles.Bottom | AnchorStyles.Right);
            bill = new Billing_dataentry();
            bill.MdiParent = this;
            recepit = new Recepit();
            recepit.MdiParent = this;
            account = new Account_Head();
            account.MdiParent = this;
            chkbounce.MdiParent = this;
        }

        private void button1_MouseHover(object sender, EventArgs e)
        {
            Button b = (Button)sender;
            b.BackgroundImage = global::Vardhman.Properties.Resources.hover;            
        }

        private void button1_MouseLeave(object sender, EventArgs e)
        {
            Button b = (Button)sender;
            b.BackgroundImage = global::Vardhman.Properties.Resources.simple;
        }

        private void button4_MouseEnter(object sender, EventArgs e)
        {
            button4.BackgroundImage = global::Vardhman.Properties.Resources.pressed;
        }

        private void button4_MouseLeave(object sender, EventArgs e)
        {
            button4.BackgroundImage = global::Vardhman.Properties.Resources.normal;
        }

        private void button1_Click(object sender, EventArgs e)
        {
            try
            {
                bill.Show();
                bill.BringToFront();
                bill.WindowState = FormWindowState.Maximized;
                panel1.Hide();
            }
            catch
            {
                bill = new Billing_dataentry();
                bill.MdiParent = this;
                bill.Show();
                bill.WindowState = FormWindowState.Maximized;
                panel1.Hide();
            }
        }

        private void button2_Click(object sender, EventArgs e)
        {
            try { recepit.Show(); }
            catch { recepit = new Recepit(); recepit.MdiParent = this; recepit.Show(); }
            recepit.BringToFront();
            recepit.WindowState = FormWindowState.Maximized;
            panel1.Hide();
        }

        private void button8_Click(object sender, EventArgs e)
        {
            try
            {
                account.Show();
                account.BringToFront();
                account.WindowState = FormWindowState.Maximized;
                panel1.Hide();
            }
            catch
            {
                account = new Account_Head();
                account.MdiParent = this;
                account.Show();
                account.WindowState = FormWindowState.Maximized;
                panel1.Hide();
            }
            
        }

        private void homeToolStripMenuItem_Click(object sender, EventArgs e)
        {
            panel1.Visible = true;
        }

        private void button4_Click(object sender, EventArgs e)
        {
            try
            {
                empty.ShowDialog();
            }
            catch
            {
                empty = new emptybill();
                empty.ShowDialog();
            }
        }

        private void ckeckBounceToolStripMenuItem_Click(object sender, EventArgs e)
        {
            try
            {
                panel1.Visible = false;
                chkbounce.Show();
                chkbounce.WindowState = FormWindowState.Maximized;
            }
            catch
            {
                
                chkbounce = new Check_Bounse();
                chkbounce.MdiParent = this;
                chkbounce.Show();
                chkbounce.WindowState = FormWindowState.Maximized;
            }
        }
        private void ledger()
        {
            //accountselect frm = new accountselect();
            //if (frm.ShowDialog() == DialogResult.OK)
            //{
            //    Report_Viewercs rp = new Report_Viewercs();
            //    rp.name = frm.name;
            //    rp.city = frm.city;
            //    rp.loadrpt("Ledger");
            //    rp.ShowDialog();
            //}
            panel1.Visible = false;
            Ledger_showall ls = new Ledger_showall();
            ls.MdiParent = this;
            ls.Show();
            ls.BringToFront();
            ls.WindowState = FormWindowState.Maximized;
        }

        private void ledgerToolStripMenuItem_Click(object sender, EventArgs e)
        {
            ledger();
        }

        private void button3_Click(object sender, EventArgs e)
        {
            ledger();
        }
        private void summary()
        {
            dateselection frm = new dateselection();
            if (frm.ShowDialog() == DialogResult.OK)
            {
                Report_Viewercs rp = new Report_Viewercs();
                rp.datefrom = frm.datefrom;
                rp.dateto = frm.dateto;
                rp.loadrpt("Summary");
                rp.ShowDialog();
            }
        }

        private void button5_Click(object sender, EventArgs e)
        {
            summary();
        }

        private void summaryToolStripMenuItem_Click(object sender, EventArgs e)
        {
            summary();
        }
        private void autobackup()
        {
            Connection con = new Connection();
            con.connent();
            string x = con.exesclr("exec chk_autobackuppath");
            if (x == "0")
            {
                if (folderBrowserDialog1.ShowDialog() == DialogResult.Cancel)
                    return;
                string activedir = folderBrowserDialog1.SelectedPath;
                con.exeNonQurey(string.Format("insert into autobackuppath([path]) values('{0}')", activedir));
                string folder = DateTime.Now.Day.ToString() + '_' + DateTime.Now.Month + '_' + DateTime.Now.Year;
                string newpath = Path.Combine(activedir, folder);
                if (!Directory.Exists(newpath))
                    Directory.CreateDirectory(newpath);
                string filepath = Path.Combine(newpath, "fullbackup.bak");
                if (!File.Exists(filepath))
                    con.exeNonQurey(string.Format("exec full_backup '{0}'", filepath));
            }
            else
            {

                string activedir = con.exesclr("select max([path]) as path from autobackuppath");;
                string folder = DateTime.Now.Day.ToString() + '_' + DateTime.Now.Month + '_' + DateTime.Now.Year;
                string newpath = Path.Combine(activedir, folder);
                if (!Directory.Exists(newpath))
                    Directory.CreateDirectory(newpath);
                string filepath = Path.Combine(newpath, "fullbackup.bak");
                if (!File.Exists(filepath))
                    con.exeNonQurey(string.Format("exec full_backup '{0}'", filepath));
            }
        }

        private void button9_Click(object sender, EventArgs e)
        {
            try
            {
                t.MdiParent = this;
                t.WindowState = FormWindowState.Maximized;
                panel1.Visible = false;
                t.Show();
                t.BringToFront();
            }
            catch
            {
                t = new toteler();
                t.MdiParent = this;
                t.WindowState = FormWindowState.Maximized;
                t.Show();
                panel1.Visible = false;
                t.BringToFront();
            }
        }

        private void button10_Click(object sender, EventArgs e)
        {
            try
            {
                item.MdiParent = this;
                item.WindowState = FormWindowState.Maximized;
                panel1.Visible = false;
                item.Show();
                item.BringToFront();
            }
            catch
            {
                item = new Item_Entry();
                item.MdiParent = this;
                item.WindowState = FormWindowState.Maximized;
                item.Show();
                panel1.Visible = false;
                item.BringToFront();
            }
        }

        private void backupToolStripMenuItem_Click(object sender, EventArgs e)
        {
            if (folderBrowserDialog1.ShowDialog() == DialogResult.Cancel)
                return;
            string x = folderBrowserDialog1.SelectedPath;
        }
    }
}